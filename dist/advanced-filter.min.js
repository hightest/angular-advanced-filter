/*!
 * angular-ht-advanced-filter
 * https://github.com/hightest/angular-advanced-filter
 * Version: 0.0.1 - 2015-02-25T11:10:50.262Z
 * License: 
 */
angular.module("ht.advanced-filter",["ui.bootstrap"]).directive("htAdvancedFilter",function(){return{require:"^ngModel",scope:{htAdvancedFilter:"="},templateUrl:"advanced-filter.html",controller:["$scope","$filter","$timeout",function(e,n,r){var t=e.htAdvancedFilter,l=t.data,i=t.filteredData;e.fields=[{name:"Wszędzie",value:"$"}],e.fields=e.fields.concat(t.fields),e.select=t.select,e.filters=angular.isDefined(t.filters)?t.filters:[],e.filterTypes=[{name:"Szukaj w",value:"filter"},{name:"Mniejszy od",value:"lessThanOrEqualTo"},{name:"Większy od",value:"greaterThanOrEqualTo"}],e.add=function(){e.filters.push({filter:e.filterTypes[0].value,field:"$",value:""})},e.$watch(function(){return l},function(e,n){e!=n&&c()},!0);var a,f=function(e){var n={};return angular.forEach(e,function(e){e.value.length&&(angular.isUndefined(n[e.filter])&&(n[e.filter]={}),angular.isDefined(n[e.filter][e.field])?(Array.isArray(n[e.filter][e.field])||(n[e.filter][e.field]=[n[e.filter][e.field]]),n[e.filter][e.field].push(e.value)):n[e.filter][e.field]=e.value)}),n},o=function(n){var r=e.select;return angular.forEach(r,function(e){angular.forEach(e.options,function(e){if(angular.isDefined(e.selected)&&e.selected){var r=e.type,t=e.field,l=e.value;angular.isDefined(n[r])||(n[r]={}),angular.isDefined(n[r][t])&&(n[r][t].length>0||angular.isNumber(n[r][t]))?(Array.isArray(n[r][t])||(n[r][t]=[n[r][t]]),n[r][t].push(l)):n[r][t]=l}})}),n},u=function(e){var n=[];return angular.forEach(e,function(r,t){Array.isArray(r)&&angular.forEach(r,function(r){var l=angular.copy(e);l[t]=r,n=n.concat(u(l))})}),0===n.length&&n.push(e),n},c=function(){a&&r.cancel(a),a=r(v,500)},s=function(e,n){if(0===e.length)return'"'+n+'"';var r=e.indexOf("."),t=e.split(".",1)[0],l="";return-1!==r&&(l=e.substr(r+1)),'{"'+t+'":'+s(l,n)+"}"},d=function(e){var n=Object.keys(e)[0],r=e[n];return JSON.parse(s(n,r))},v=function(){var r=angular.copy(l),t=f(e.filters);t=o(t),angular.forEach(t,function(e,t){if(e=u(e),1===e.length)e[0]=d(e[0]),r=n(t)(r,e[0]);else{var l=[];angular.forEach(e,function(e){l=l.concat(n(t)(r,e))});for(var i=0;i<l.length;i++)for(var a=i+1;a<l.length;a++)l[i]==l[a]&&l.splice(a--,1);r=l}}),angular.copy(r,i)};e.$watch("filters",function(e,n){n!=e&&c()},!0),e.$watch("select",function(e,n){n!=e&&c()},!0),e.remove=function(n){e.filters.splice(n,1)},v()}]}}).filter("greaterThanOrEqualTo",["filterFilter",function(e){return function(n,r){return e(n,r,function(e,n){var r=function(e){return!isNaN(parseFloat(e))};return r(e)&&r(n)?e>=n:!1})}}]).filter("lessThanOrEqualTo",["filterFilter",function(e){return function(n,r){return e(n,r,function(e,n){var r=function(e){return!isNaN(parseFloat(e))};return r(e)&&r(n)?n>=e:!1})}}]),angular.module("ht.advanced-filter").run(["$templateCache",function(e){e.put("advanced-filter.html",'<div><div class="form-inline" ng-repeat="filter in filters"><div class="form-group"><select class="form-control" ng-model="filter.filter" ng-options="filterType.value as filterType.name for filterType in filterTypes"></select></div><div class="form-group"><select class="form-control" ng-model="filter.field" ng-options="field.value as field.name for field in fields"></select></div><div class="form-group"><input class="form-control" type="text" ng-model="filter.value"></div><div class="form-group"><span class="glyphicon glyphicon-remove-circle" ng-click="remove($index)"></span></div></div><button type="button" class="btn btn-default" ng-click="add()">Dodaj filtr</button></div><h4 ng-repeat-start="field in select">{{field.name}}</h4><div class="btn-group" ng-repeat-end=""><label ng-repeat="option in field.options" class="btn btn-success" ng-model="option.selected" btn-radio="1" btn-checkbox="">{{option.name}}</label></div>')}]);